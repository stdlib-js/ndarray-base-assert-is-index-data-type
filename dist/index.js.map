{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/array-base-assert-contains' ).factory;\nvar dtypes = require( '@stdlib/ndarray-dtypes' );\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray index data type.\n*\n* @name isIndexDataType\n* @type {Function}\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray index data type\n*\n* @example\n* var bool = isIndexDataType( 'binary' );\n* // returns false\n*\n* bool = isIndexDataType( 'float32' );\n* // returns false\n*\n* bool = isIndexDataType( 'float64' );\n* // returns false\n*\n* bool = isIndexDataType( 'generic' );\n* // returns true\n*\n* bool = isIndexDataType( 'int16' );\n* // returns false\n*\n* bool = isIndexDataType( 'int32' );\n* // returns true\n*\n* bool = isIndexDataType( 'int8' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint16' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint32' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint8' );\n* // returns true\n*\n* bool = isIndexDataType( 'uint8c' );\n* // returns false\n*\n* bool = isIndexDataType( 'foo' );\n* // returns false\n*/\nvar isIndexDataType = contains( dtypes( 'index' ) );\n\n\n// EXPORTS //\n\nmodule.exports = isIndexDataType;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported ndarray index data type.\n*\n* @module @stdlib/ndarray-base-assert-is-index-data-type\n*\n* @example\n* var isIndexDataType = require( '@stdlib/ndarray-base-assert-is-index-data-type' );\n*\n* var bool = isIndexDataType( 'binary' );\n* // returns false\n*\n* bool = isIndexDataType( 'float32' );\n* // returns false\n*\n* bool = isIndexDataType( 'float64' );\n* // returns false\n*\n* bool = isIndexDataType( 'generic' );\n* // returns true\n*\n* bool = isIndexDataType( 'int16' );\n* // returns false\n*\n* bool = isIndexDataType( 'int32' );\n* // returns true\n*\n* bool = isIndexDataType( 'int8' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint16' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint32' );\n* // returns false\n*\n* bool = isIndexDataType( 'uint8' );\n* // returns true\n*\n* bool = isIndexDataType( 'uint8c' );\n* // returns false\n*\n* bool = isIndexDataType( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,oCAAqC,EAAE,QAC3DC,EAAS,QAAS,wBAAyB,EAkD3CC,EAAkBF,EAAUC,EAAQ,OAAQ,CAAE,EAKlDF,EAAO,QAAUG,ICXjB,IAAIC,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "contains", "dtypes", "isIndexDataType", "main"]
}
